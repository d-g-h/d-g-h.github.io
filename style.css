html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}@font-face{font-family:'icomoon';src:url("assets/fonts/icomoon.eot?-rsav07");src:url("assets/fonts/icomoon.eot?#iefix-rsav07") format("embedded-opentype"),url("assets/fonts/icomoon.woff?-rsav07") format("woff"),url("assets/fonts/icomoon.ttf?-rsav07") format("truetype"),url("assets/fonts/icomoon.svg?-rsav07#icomoon") format("svg");font-weight:normal;font-style:normal}[class^="icon-"],[class*=" icon-"]{font-family:'icomoon';speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-mark-github:before{content:"\e600"}.icon-file-text:before{content:"\e601"}body{color:rgba(0,0,0,0.85);font:13px/1.4 Helvetica,arial,nimbussansl,liberationsans,freesans,clean,sans-serif,"Segoe UI Emoji","Segoe UI Symbol"}a{color:#4078c0;text-decoration:none}a:hover{text-decoration:underline}h1{color:#333;text-align:center}h2{margin-bottom:0}h3,h4,h5,h6{color:#666}li{list-style:none}p{margin:0.5em 0}time{font:13px/1 Helvetica,arial,nimbussansl,liberationsans,freesans,clean,sans-serif,"Segoe UI Emoji","Segoe UI Symbol";color:#999}.logo{display:block;margin:0 auto;background-image:url("/assets/images/dgh.png");background-size:contain;width:3em;height:3em;border-radius:50%}nav ul{margin:0;padding:0;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}nav ul li{text-align:center;padding:1em;-webkit-align-self:flex-end;-ms-flex-item-align:end;align-self:flex-end}nav ul li a{font-size:12px}.contribute{font-size:10px}.icon-mark-github:before{font-size:24px;padding:4px}.icon-file-text:before{font-size:24px;padding:4px}.container{max-width:800px;margin:0 auto;border-top:1px solid #999;font-size:16px}.container img{display:block;max-width:100%;margin:0 auto}.job-title,.contact-info{color:#4078c0;text-align:center}.resume h2,.resume h3,.resume h4,.resume h5{margin:0}article{margin-top:1em}

/*# sourceMappingURL=data:application/json;base64, */